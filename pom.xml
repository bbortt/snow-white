<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2025 Timon Borter <timon.borter@gmx.ch>
  ~ Licensed under the Polyform Small Business License 1.0.0
  ~ See LICENSE file for full details.
  -->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.bbortt.snow-white</groupId>
  <artifactId>parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <packaging>pom</packaging>

  <scm>
    <url>scm:git:https://github.com/bbortt/snow-white.git</url>
  </scm>

  <modules>
    <module>example-application</module>
    <module>microservices</module>
    <module>toolkit</module>
    <module>internal</module>
    <module>helm</module>
  </modules>

  <properties>
    <!-- Global -->
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- SonarQube properties -->
    <sonar.projectName>Snow White</sonar.projectName>
    <sonar.host.url>http://localhost:9000</sonar.host.url>

    <sonar.sources>src/main</sonar.sources>
    <sonar.tests>src/test</sonar.tests>

    <sonar.inclusions>src/main/**/*.java</sonar.inclusions>
    <sonar.exclusions>src/main/resources/**</sonar.exclusions>

    <sonar.test.inclusions>src/test/**/*.java</sonar.test.inclusions>

    <sonar.coverage.exclusions>
      example-application/**,
      **/Main.java
    </sonar.coverage.exclusions>

    <!-- JaCoCo properties -->
    <jacoco.version>0.8.13</jacoco.version>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.coverage.jacoco.xmlReportPaths>
      ${maven.multiModuleProjectDirectory}/target/jacoco-aggregate/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.junit.reportPaths>
      target/surefire-reports,
      target/failsafe-reports
    </sonar.junit.reportPaths>

    <!-- Dependency Management -->
    <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
    <org.projectlombok.version>1.18.42</org.projectlombok.version>
    <sonar-maven-plugin.version>5.2.0.4988</sonar-maven-plugin.version>
    <spring-boot.version>3.5.6</spring-boot.version>

    <!-- Node.js & NPM -->
    <frontend-maven-plugin.version>1.15.4</frontend-maven-plugin.version>
    <node.downloadRoot>https://nodejs.org/dist/</node.downloadRoot>
    <node.version>v22.15.0</node.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.opentelemetry.semconv</groupId>
        <artifactId>opentelemetry-semconv</artifactId>
        <version>1.37.0</version>
      </dependency>

      <dependency>
        <groupId>io.github.bbortt.snow-white</groupId>
        <artifactId>commons</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${org.projectlombok.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend-maven-plugin.version}</version>
          <configuration>
            <installDirectory>target</installDirectory>
            <nodeVersion>${node.version}</nodeVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.9.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.5.4</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*AppTest.java</exclude>
            <exclude>**/*IT.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <includes>
                <include>**/*IT.java</include>
              </includes>
            </configuration>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>
                ${maven.multiModuleProjectDirectory}/target/jacoco.exec
              </destFile>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>
                ${maven.multiModuleProjectDirectory}/target/jacoco.exec
              </dataFile>
              <outputDirectory>
                ${project.reporting.outputDirectory}/jacoco
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar-maven-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>node</id>

      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>

            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <nodeVersion>${node.version}</nodeVersion>
                  <nodeDownloadRoot>${node.downloadRoot}</nodeDownloadRoot>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sonar</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>report-aggregate</id>
                <phase>verify</phase>
                <goals>
                  <goal>report-aggregate</goal>
                </goals>
                <configuration>
                  <dataFileIncludes>
                    <dataFileInclude>**/jacoco.exec</dataFileInclude>
                  </dataFileIncludes>
                  <outputDirectory>
                    ${maven.multiModuleProjectDirectory}/target/jacoco-aggregate
                  </outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${sonar-maven-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
