openapi: 3.0.1
info:
  title: Snow White
  description: The Snow White REST API definition
  x-otel-service-name: snow-white
  contact:
    email: timon.borter@gmx.ch
  license:
    name: Apache 2.0
    url: https://github.com/bbortt/snow-white/blob/release/LICENSE
  version: 1.0.0
servers:
  - description: Localhost
    url: http://localhost:8080
tags:
  - name: span-resource
    description: The resource managing all around spans.
  - name: specification-resource
    description: The resource managing all around specifications.
paths:
  /api/rest/v1/spans/count:
    get:
      tags:
        - span-resource
      summary: Count the number of recorded spans.
      description: |
        This will count the number of recorded spans. It is just a demo API
        endpoint and will be removed in future releases!
      operationId: countRecordedSpans
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
        500:
          description: Kinda no clue what went wrong at this point...
  /api/v1/specifications/openapi:
    post:
      tags:
        - specification-resource
      summary: Upload an OpenAPI specification.
      description: |
        This will record the paths of the OpenAPI specification and register it
        for later observability. The application will never record spans for any
        endpoints if it is not contained in any OpenAPI specification uploaded
        beforehand. All specifications must contain the `x-otel-service-name`
        information, otherwise we cannot identify belonging resource later on.
      operationId: uploadOpenapiSpecification
      parameters:
        - name: Content-Type
          description: multipart/form-data description.
          schema:
            type: string
          in: header
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - specification
              properties:
                specification:
                  type: string
                  format: binary
      responses:
        204:
          $ref: '#/components/responses/OpenApiSpecificationUploadWithHints'
        400:
          description: |
            The uploaded OpenAPi specification is invalid!
        409:
          $ref: '#/components/responses/ConflictingOpenApiSpecification'
        500:
          description: Kinda no clue what went wrong at this point...
  /api/v1/specifications/openapi/force:
    post:
      tags:
        - specification-resource
      summary: Force-upload an OpenAPI specification.
      description: |
        Use this method with caution! This will overwrite existing versions of
        the same OpenAPI specification regardless of any errors that might
        occur. This method should only be used with prerelease versions and
        only after checking that the upload using the endpoint at
        `/api/v1/specifications/openapi` did not succeed. All specifications
        must contain the `x-otel-service-name` information, otherwise we cannot
        identify belonging resource later on.
      operationId: forceUploadOpenApiSpecification
      parameters:
        - name: Content-Type
          description: multipart/form-data description.
          schema:
            type: string
          in: header
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - specification
              properties:
                specification:
                  type: string
                  format: binary
      responses:
        204:
          $ref: '#/components/responses/OpenApiSpecificationUploadWithHints'
        400:
          description: |
            The uploaded OpenAPi specification is invalid!
        500:
          description: Kinda no clue what went wrong at this point...
components:
  responses:
    OpenApiSpecificationUploadWithHints:
      description: |
        The upload of the OpenAPi specification succeeded. We're a kind server
        and validate all specifications for you. If the specification contained
        warnings (not errors!) we will hint you about it.
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    ConflictingOpenApiSpecification:
      description: |
        You attempted to upload an OpenApi specification in a version that
        already exists on the server, but with a different body (hash matching)!
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OpenApiSpecificationInformation'
  schemas:
    OpenApiSpecificationInformation:
      type: object
      required:
        - specification
      properties:
        specification:
          type: string
          description: |
            The `x-otel-service-name` of the conflicting OpenApi
            specification.
        uploadDate:
          type: string
          format: date-time
          description: Date and time of upload.
          example: '2022-01-1T08:30:00Z'
