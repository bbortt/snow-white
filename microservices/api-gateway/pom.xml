<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2025 Timon Borter <timon.borter@gmx.ch>
  ~ Licensed under the Polyform Small Business License 1.0.0
  ~ See LICENSE file for full details.
  -->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.github.bbortt.snow-white.microservices</groupId>
    <artifactId>microservices</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>api-gateway</artifactId>
  <packaging>jar</packaging>

  <properties>
    <!-- Dependency Management -->
    <git-commit-id-maven-plugin.version>9.0.2</git-commit-id-maven-plugin.version>
    <spring-cloud.version>2025.1.0-M4</spring-cloud.version>

    <!-- SonarQube properties -->
    <sonar.inclusions>
      src/main/**/*.java
      src/main/webapp/**/*.ts,
      src/main/webapp/**/*.tsx
    </sonar.inclusions>
    <sonar.exclusions>
      node_modules/**,
      src/main/webapp/app/clients/**,
      src/main/webapp/content/**,
      src/main/webapp/i18n/*.js,
      target/classes/static/**
    </sonar.exclusions>

    <sonar.test.inclusions>
      src/test/**/*.java,
      src/main/webapp/app/**/*.spec.ts,
      src/main/webapp/app/**/*.spec.tsx
    </sonar.test.inclusions>

    <sonar.javascript.lcov.reportPaths>target/test-results/lcov.info</sonar.javascript.lcov.reportPaths>
    <sonar.testExecutionReportPaths>target/test-results/TESTS-results-sonar.xml</sonar.testExecutionReportPaths>

    <!-- Frontend Build Steering -->
    <frontend.build.skip>false</frontend.build.skip>
    <frontend.test.skip>false</frontend.test.skip>

    <!-- Application Testing -->
    <container.registry>ghcr.io</container.registry>
    <image.tag>${project.version}</image.tag>
    <docker.network>bridge</docker.network>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.opentelemetry.javaagent</groupId>
      <artifactId>opentelemetry-javaagent</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>io.github.bbortt.snow-white</groupId>
      <artifactId>commons</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
      <version>${org.springdoc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway-server-webflux</artifactId>
    </dependency>

    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>5.5.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock.integrations</groupId>
      <artifactId>wiremock-spring-boot</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-webtestclient</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.github.git-commit-id</groupId>
          <artifactId>git-commit-id-maven-plugin</artifactId>
          <version>${git-commit-id-maven-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <includeOnlyProperties>
              <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
              <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
              <includeOnlyProperty>^git.branch$</includeOnlyProperty>
            </includeOnlyProperties>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-otel-agent</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>io.opentelemetry.javaagent</includeGroupIds>
              <includeArtifactIds>opentelemetry-javaagent</includeArtifactIds>
              <outputDirectory>${project.build.directory}/opentelemetry-javaagent</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <configuration>
              <classifier>executable</classifier>
              <mainClass>io.github.bbortt.snow.white.microservices.api.gateway.Application</mainClass>
            </configuration>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-v1-quality-gate-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>microservices/quality-gate-api/src/main/resources/openapi/v1-quality-gate-api.yml</inputSpec>
              <generatorName>typescript-axios</generatorName>
              <output>${project.build.directory}/generated-sources/openapi/quality-gate-api</output>
            </configuration>
          </execution>
          <execution>
            <id>generate-v1-report-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>microservices/report-coordinator-api/src/main/resources/openapi/v1-report-api.yml</inputSpec>
              <generatorName>typescript-axios</generatorName>
              <output>${project.build.directory}/generated-sources/openapi/report-api</output>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-generated-clients</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/main/webapp/app/clients</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/generated-sources/openapi</directory>
                  <includes>
                    <include>**/*.ts</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install-node-and-corepack</id>
            <goals>
              <goal>install-node-and-corepack</goal>
            </goals>
          </execution>
          <execution>
            <id>pnpm-install</id>
            <goals>
              <goal>corepack</goal>
            </goals>
            <configuration>
              <arguments>pnpm install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>webapp-test</id>
            <goals>
              <goal>corepack</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <arguments>pnpm run webapp:test</arguments>
              <skip>${frontend.test.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.5.0</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>target/classes/static/</directory>
                </fileset>
                <fileset>
                  <directory>src/main/webapp/app/clients/</directory>
                  <includes>
                    <include>**/*.ts</include>
                  </includes>
                </fileset>
              </filesets>
            </configuration>
          </plugin>

          <plugin>
            <groupId>io.github.git-commit-id</groupId>
            <artifactId>git-commit-id-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>webapp-build-prod</id>
                <goals>
                  <goal>corepack</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>pnpm run webapp:prod</arguments>
                  <environmentVariables>
                    <APP_VERSION>${project.version}</APP_VERSION>
                  </environmentVariables>
                  <skip>${frontend.build.skip}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>webapp</id>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>webapp-build-dev</id>
                <goals>
                  <goal>corepack</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>pnpm run webapp:build</arguments>
                  <environmentVariables>
                    <APP_VERSION>${project.version}</APP_VERSION>
                  </environmentVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>apptest</id>

      <properties>
        <frontend.build.skip>true</frontend.build.skip>
        <frontend.test.skip>true</frontend.test.skip>
      </properties>

      <build>
        <resources>
          <resource>
            <directory>src/apptest/resources</directory>
          </resource>
        </resources>

        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.6.1</version>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/apptest/java</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>${container.registry}/bbortt/snow-white/api-gateway:${image.tag}</name>
                  <alias>api-gateway</alias>
                  <run>
                    <env>
                      <SNOW_WHITE_API_GATEWAY_QUALITY-GATE-API-URL>http://wiremock:8080</SNOW_WHITE_API_GATEWAY_QUALITY-GATE-API-URL>
                      <SNOW_WHITE_API_GATEWAY_REPORT-COORDINATOR-API-URL>
                        http://wiremock:8080
                      </SNOW_WHITE_API_GATEWAY_REPORT-COORDINATOR-API-URL>
                      <SNOW_WHITE_API_GATEWAY_PUBLIC-URL>http://localhost:8080</SNOW_WHITE_API_GATEWAY_PUBLIC-URL>
                      <OTEL_TRACES_EXPORTER>none</OTEL_TRACES_EXPORTER>
                      <OTEL_METRICS_EXPORTER>none</OTEL_METRICS_EXPORTER>
                      <OTEL_LOGS_EXPORTER>none</OTEL_LOGS_EXPORTER>
                    </env>
                    <log>
                      <prefix>api-gateway</prefix>
                      <date>default</date>
                    </log>
                    <network>
                      <name>${docker.network}</name>
                    </network>
                    <ports>
                      <port>8080:8080</port>
                    </ports>
                  </run>
                </image>
              </images>
            </configuration>

            <executions>
              <execution>
                <id>start-containers</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>

              <execution>
                <id>stop-containers</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>wait-on-ports</id>
                <goals>
                  <goal>corepack</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <arguments>pnpm run apptest:wait</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <configuration>
                  <includes>
                    <include>**/*AppTest.java</include>
                  </includes>
                </configuration>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>spring-milestones</id>
      <url>https://repo.spring.io/milestone/</url>
    </repository>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
  </repositories>
</project>
