name: 'otel-event-filter-stream: apptest'

networks:
  default:
    name: github_actions
    external: true
    driver: bridge

services:
  kafka:
    image: confluentinc/cp-kafka:8.1.0
    environment:
      # Cluster / broker identity
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      CLUSTER_ID: 'c551e3de-d399-4a6d-9240-446728359604' # random static cluster ID for single-node KRaft
      KAFKA_PROCESS_ROLES: 'broker,controller'

      # Listener setup
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,EXTERNAL://kafka:9094'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'

      # Other essential configs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    ports:
      - '9092:9092'
      - '9094:9094'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'kafka-metadata-quorum.sh describe --bootstrap-server localhost:9092 || exit 1',
        ]
      interval: 2s
      timeout: 5s
      retries: 12
    restart: on-failure
    networks:
      - default

  redis:
    image: redis/redis-stack-server:7.4.0-v7
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 1s
      timeout: 3s
      retries: 5
    restart: on-failure
    networks:
      - default
