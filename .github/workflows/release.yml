name: Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  release-please:
    name: 'Release Please'
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          prerelease: true
          release-type: maven
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          cache: maven
          distribution: 'temurin'
          java-version: 21
      - name: Build with Maven
        if: ${{ steps.release.outputs.release_created }}
        run: ./mvnw -DskipTests -Pprod package
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build JDK Images
        if: ${{ steps.release.outputs.release_created }}
        run: .github/scripts/build-oci-images.sh "${{ steps.release.outputs.tag_name }}" "ghcr.io" "--push"
      - name: Build Native Images
        if: ${{ steps.release.outputs.release_created }}
        run: ./mvnw -DskipTests -Pnative,prod -pl :kafka-event-filter,:report-coordination-service,:quality-gate-api spring-boot:build-image
      - name: Push Native Images
        if: ${{ steps.release.outputs.release_created }}
        run: |
          docker image push "ghcr.io/bbortt/snow-white/kafka-event-filter:${{ steps.release.outputs.tag_name }}"
          docker image push "ghcr.io/bbortt/snow-white/quality-gate-api:${{ steps.release.outputs.tag_name }}"
          docker image push "ghcr.io/bbortt/snow-white/report-coordination-service:${{ steps.release.outputs.tag_name }}"
