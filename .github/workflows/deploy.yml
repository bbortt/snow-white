name: Deployments

on:
  push:
    tags:
      - v*

jobs:
  publish-images:
    name: 'Publish Images'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          cache: maven
          distribution: 'temurin'
          java-version: 21
      - name: Build with Maven
        run: ./mvnw -B -DskipTests -Pprod install
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build JDK Images
        run: .github/scripts/build-oci-images.sh "${{  github.ref_name }}" "ghcr.io" "--push"
      - name: Build Native Images
        run: ./mvnw -B -Dimage.tag="${{  github.ref_name }}" -DskipTests -Pnative,prod -pl :kafka-event-filter,:report-coordination-service,:quality-gate-api spring-boot:build-image
      - name: Push Native Images
        run: |
          docker image push "ghcr.io/bbortt/snow-white/kafka-event-filter:${{  github.ref_name }}"
          docker image push "ghcr.io/bbortt/snow-white/quality-gate-api:${{  github.ref_name }}"
          docker image push "ghcr.io/bbortt/snow-white/report-coordination-service:${{  github.ref_name }}"
